"""Init Model

Revision ID: 8384d1189489
Revises: 
Create Date: 2025-06-08 13:27:26.551343

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '8384d1189489'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('company',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('project_code',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('project_code', sa.String(length=255), nullable=False),
    sa.Column('period', sa.String(length=100), nullable=True),
    sa.Column('require_scope12', sa.Boolean(), nullable=True),
    sa.Column('require_waste', sa.Boolean(), nullable=True),
    sa.Column('require_material', sa.Boolean(), nullable=True),
    sa.Column('require_transport', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('project_code_client',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('project_code_id', sa.Integer(), nullable=False),
    sa.Column('client_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['client_id'], ['company.id'], ondelete='RESTRICT'),
    sa.ForeignKeyConstraint(['project_code_id'], ['project_code.id'], ondelete='RESTRICT'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('site',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('company_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('location', sa.String(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['company_id'], ['company.id'], ondelete='RESTRICT'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('company_id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('role', sa.Enum('GENERAL', 'SUPER', name='userroleenum'), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['company_id'], ['company.id'], ondelete='RESTRICT'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('vendor_code',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('project_code_id', sa.Integer(), nullable=False),
    sa.Column('vendor_code', sa.String(length=255), nullable=False),
    sa.Column('company_id', sa.Integer(), nullable=False),
    sa.Column('used', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['company_id'], ['company.id'], ondelete='RESTRICT'),
    sa.ForeignKeyConstraint(['project_code_id'], ['project_code.id'], ondelete='RESTRICT'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('estimate_info',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('site_id', sa.Integer(), nullable=False),
    sa.Column('requested_by_user_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['requested_by_user_id'], ['user.id'], ondelete='RESTRICT'),
    sa.ForeignKeyConstraint(['site_id'], ['site.id'], ondelete='RESTRICT'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_site',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('company_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['company_id'], ['company.id'], ondelete='RESTRICT'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ondelete='RESTRICT'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('estimate_cycle',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('estimate_info_id', sa.Integer(), nullable=False),
    sa.Column('cycle_status', sa.Enum('NOT_STARTED', 'STARTED', 'UPLOADING', 'PENDING_REQUEST', 'SUBMITTING', 'FEEDBACK', 'DONE', name='cyclestatusenum'), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['estimate_info_id'], ['estimate_info.id'], ondelete='RESTRICT'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('estimate_info_share',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('estimate_info_id', sa.Integer(), nullable=False),
    sa.Column('project_code_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['estimate_info_id'], ['estimate_info.id'], ondelete='RESTRICT'),
    sa.ForeignKeyConstraint(['project_code_id'], ['project_code.id'], ondelete='RESTRICT'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('estimate_result',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('estimate_info_id', sa.Integer(), nullable=False),
    sa.Column('comment', sa.String(length=500), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['estimate_info_id'], ['estimate_info.id'], ondelete='RESTRICT'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('estimate_attachment',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('cycle_id', sa.Integer(), nullable=False),
    sa.Column('type', sa.Enum('SCOPE12', 'WASTE', 'MATERIAL', 'TRANSPORT', name='attachmenttypeenum'), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['cycle_id'], ['estimate_cycle.id'], ondelete='RESTRICT'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('estimate_feedback',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('cycle_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('content', sa.String(length=1000), nullable=True),
    sa.Column('is_send_mail', sa.Boolean(), nullable=True),
    sa.Column('sent_mail_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['cycle_id'], ['estimate_cycle.id'], ondelete='RESTRICT'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ondelete='RESTRICT'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('estimate_attachment_info',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('attachment_id', sa.Integer(), nullable=False),
    sa.Column('filename', sa.String(length=255), nullable=False),
    sa.Column('s3_key', sa.String(length=255), nullable=False),
    sa.Column('content_type', sa.String(length=100), nullable=True),
    sa.Column('checksum', sa.String(length=100), nullable=True),
    sa.Column('version', sa.Integer(), nullable=True),
    sa.Column('is_latest', sa.String(length=5), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['attachment_id'], ['estimate_attachment.id'], ondelete='RESTRICT'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('estimate_attachment_review',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('attachment_id', sa.Integer(), nullable=False),
    sa.Column('reviewer_id', sa.Integer(), nullable=False),
    sa.Column('status', sa.Enum('REQUEST_CHANGE', 'APPROVED', name='reviewstatusenum'), nullable=False),
    sa.Column('comment', sa.String(length=500), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['attachment_id'], ['estimate_attachment.id'], ondelete='RESTRICT'),
    sa.ForeignKeyConstraint(['reviewer_id'], ['user.id'], ondelete='RESTRICT'),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('estimate_attachment_review')
    op.drop_table('estimate_attachment_info')
    op.drop_table('estimate_feedback')
    op.drop_table('estimate_attachment')
    op.drop_table('estimate_result')
    op.drop_table('estimate_info_share')
    op.drop_table('estimate_cycle')
    op.drop_table('user_site')
    op.drop_table('estimate_info')
    op.drop_table('vendor_code')
    op.drop_table('user')
    op.drop_table('site')
    op.drop_table('project_code_client')
    op.drop_table('project_code')
    op.drop_table('company')
    # ### end Alembic commands ###
